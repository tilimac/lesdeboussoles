{% extends "FrontofficeBundle::layout.html.twig" %}

{% block page_container %}
    
    <style>
        .carousel-inner{
            height: 400px;
        }
        .carousel-inner > .item,.carousel-inner > .item > .fill{
            height: 100%;
        }
    </style>

    <!-- Page Heading/Breadcrumbs -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                {{ hike.locality }}
                <small>{{ hike.title }}</small>
            </h1>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">

        <div class="col-md-8">
            <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                <!-- Indicators -->
                <ol class="carousel-indicators">
                    {% for image in hike.images %}
                        <li data-target="#carousel-example-generic" data-slide-to="{{ loop.index0 }}" class="active"></li>
                    {% endfor %}
                </ol>

                <!-- Wrapper for slides -->
                <div class="carousel-inner">
                    {% for image in hike.images %}
                        <div class="item{% if loop.first %} active{% endif %}">
                            <div class="fill" style="background-image:url('{{ asset(image) }}');background-size: cover;"></div>
                        </div>
                    {% endfor %}
                </div>

                <!-- Controls -->
                <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                </a>
                <a class="right carzqzousel-control" href="#carousel-example-generic" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right"></span>
                </a>
            </div>
        </div>

        <div class="col-md-4">
            <h3>Description</h3>
            <p class="text-justify">{{ hike.description|raw }}</p>
            <h3>Détails</h3>
            <p>{{ hike.date|date('d/m/Y H:i:s') }}</p>
        </div>

    </div>

    <div class="row">
        <div class="col-md-12">
            <h1 class="page-header">Les parcours</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                {% for course in hike.courses %}
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="heading_course_{{ course.id }}">
                            <h4 class="panel-title">
                                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse_course_{{ course.id }}" aria-expanded="true" aria-controls="collapse_course_{{ course.id }}">
                                    <b>Parcours de {{ course.lenght }} km</b> (durée : {{ course.duration|date('h\\hm') }})
                                </a>
                            </h4>
                        </div>
                        <div id="collapse_course_{{ course.id }}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading_course_{{ course.id }}">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <ul>
                                            <li><b>Distance Le Crès jusqu'à destination</b> : {{ course.lenght }}</li>
                                            <li><b>Dénivelé</b> : {{ course.heightDifference }}</li>
                                            <li><b>Temps du parcours</b> : {{ course.duration|date('H:m') }}</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-8">
                                        {#{{ course.gpx }}#}
                                        {#<script>
                                            var map = new L.Map('map');
                                            var url = 'http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg',
                                                    attr = 'Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
                                                    service = new L.TileLayer(url, {subdomains: "1234", attribution: attr});
                                            var bounds = new L.LatLngBounds(new L.LatLng(<?php echo $minLat; ?>, <?php echo $minLon; ?>), new L.LatLng(<?php echo $maxLat; ?>,<?php echo $maxLon; ?>));
                                            /*console.log(bounds);
                                            console.log(<?php echo $minLat; ?>);
                                            console.log(<?php echo $minLon; ?>);
                                            console.log(new L.LatLng(<?php echo $minLat; ?>, <?php echo $minLon; ?>));
                                            console.log(new L.LatLng(<?php echo $maxLat; ?>, <?php echo $maxLon; ?>));*/
                                            var geojson = {"name": "NewFeatureType", "type": "FeatureCollection"
                                                , "features": [{
                                                    "type": "Feature",
                                                    "geometry": {
                                                        "type": "LineString",
                                                        "coordinates": <?php echo json_encode($carte); ?>
                                            }, "properties": null}
                                            ]}
                                            ;
                                            var el = L.control.elevation();
                                            el.addTo(map);
                                            var gjl = L.geoJson(geojson, {
                                                onEachFeature: el.addData.bind(el)
                                            }).addTo(map);
                                            map.addLayer(service).fitBounds(bounds);
                                        </script>#}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% endblock %}